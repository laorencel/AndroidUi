plugins {
    id 'com.android.application'
}
//从文件中获取签名参数
def keystorePropertiesFile = rootProject.file("sign.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.laorencel.ui'
    compileSdk 33

    defaultConfig {
        applicationId "com.laorencel.ui"
        minSdk 24
        targetSdk 33
        versionCode 100
        versionName '1.0.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //签名
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
//                def signP = deps.signProperties(true)
                storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
                storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
                keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
                keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            } catch (ex) {
                ex.printStackTrace()
            }
        }

        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
                storeFile file(keystoreProperties['DEBUG_STORE_FILE'])
                storePassword keystoreProperties['DEBUG_STORE_PASSWORD']
                keyAlias keystoreProperties['DEBUG_KEY_ALIAS']
                keyPassword keystoreProperties['DEBUG_KEY_PASSWORD']
            } catch (ex) {
                ex.printStackTrace()
            }
        }
    }
    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
                //正式
        release {
            signingConfig signingConfigs.release
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        //测试
        debug {
            signingConfig signingConfigs.debug
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    dataBinding {
        enabled = true
    }
//    buildFeatures {
//        viewBinding true
//    }
}

dependencies {

//    implementation 'androidx.appcompat:appcompat:1.4.1'
//    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(path: ':uilibrary')
}