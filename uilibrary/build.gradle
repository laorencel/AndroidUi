plugins {
    id 'com.android.library'
}
//从文件中获取签名参数
def keystorePropertiesFile = rootProject.file("sign.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.laorencel.uilibrary'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33
        versionCode 100
        versionName '1.0.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    //签名
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
//                def signP = deps.signProperties(true)
                storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
                storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
                keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
                keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            } catch (ex) {
                ex.printStackTrace()
            }
        }

        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
                storeFile file(keystoreProperties['DEBUG_STORE_FILE'])
                storePassword keystoreProperties['DEBUG_STORE_PASSWORD']
                keyAlias keystoreProperties['DEBUG_KEY_ALIAS']
                keyPassword keystoreProperties['DEBUG_KEY_PASSWORD']
            } catch (ex) {
                ex.printStackTrace()
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        //正式
//        release {
//            signingConfig signingConfigs.release
//            //混淆
//            minifyEnabled true
//            //Zipalign优化
//            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//
//        //测试
//        debug {
//            signingConfig signingConfigs.debug
//            //混淆
//            minifyEnabled false
//            //Zipalign优化
//            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources false
//
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    dataBinding {
        enable = true
    }
}

dependencies {

    //api与implementation的区别:implementation可以起到隐藏依赖的作用,但是该module是个ui库，所以使用api，可以让依赖该module的项目不用再依赖一次
    api 'androidx.appcompat:appcompat:1.4.1'
    api 'androidx.constraintlayout:constraintlayout:2.1.3'
    api 'com.google.android.material:material:1.8.0'
    api 'com.google.android.flexbox:flexbox:3.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Lifecycle
    def lifecycle_version = "2.5.1"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    // Recyclerview
    api "androidx.recyclerview:recyclerview:1.2.1"
    // recyclerview-selection For control over item selection of both touch and mouse driven selection
    // api "androidx.recyclerview:recyclerview-selection:1.1.0"

    //RxJava的依赖包
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //RxAndroid的依赖包
    api 'io.reactivex.rxjava3:rxjava:3.0.0'
    //retrofit
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.retrofit2:converter-scalars:2.9.0'
    api 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    //okhttp
    api 'com.squareup.okhttp3:okhttp:4.9.3'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    //gson
    api 'com.google.code.gson:gson:2.9.0'
    //Logger
//    api 'com.orhanobut:logger:2.2.0'

//    // rxpermissions 权限管理
//    api 'com.github.tbruyelle:rxpermissions:0.12',{
//        exclude group: 'io.reactivex'
//    }
//
//    // XPopup弹窗 https://gitee.com/lxj_gitee/XPopup
//    api 'com.github.li-xiaojun:XPopup:2.9.19'
//
//    // glide
//    api 'com.github.bumptech.glide:glide:4.11.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // SmartRefreshLayout 智能下拉刷新框架 地址：https://github.com/scwang90/SmartRefreshLayout/tree/master
    // 注意：分包之后不会有默认的Header和Footer需要手动添加！还是原来的三种方法！
    //    api 'androidx.appcompat:appcompat:1.0.0'                 //必须 1.0.0 以上
    //    api 'io.github.scwang90:refresh-layout-kernel:2.0.6'      //核心必须依赖
    //    api 'io.github.scwang90:refresh-header-classics:2.0.6'    //经典刷新头
    //    api 'io.github.scwang90:refresh-header-radar:2.0.6'       //雷达刷新头
    //    api 'io.github.scwang90:refresh-header-falsify:2.0.6'     //虚拟刷新头
    //    api 'io.github.scwang90:refresh-header-material:2.0.6'    //谷歌刷新头
    //    api 'io.github.scwang90:refresh-header-two-level:2.0.6'   //二级刷新头
    //    api 'io.github.scwang90:refresh-footer-ball:2.0.6'        //球脉冲加载
    //    api 'io.github.scwang90:refresh-footer-classics:2.0.6'    //经典加载
    // 使用时需要在项目build.gradle中添加镜像，否则很难成功依赖
    api  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    api  'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    api  'com.scwang.smart:refresh-header-radar:2.0.3'       //雷达刷新头
    api  'com.scwang.smart:refresh-header-falsify:2.0.3'     //虚拟刷新头
    api  'com.scwang.smart:refresh-header-material:2.0.3'    //谷歌刷新头
    api  'com.scwang.smart:refresh-header-two-level:2.0.3'   //二级刷新头
    api  'com.scwang.smart:refresh-footer-ball:2.0.3'        //球脉冲加载
    api  'com.scwang.smart:refresh-footer-classics:2.0.3'    //经典加载
}